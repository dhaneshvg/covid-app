{"version":3,"sources":["logo.svg","Components/Header.js","Components/Statedata.js","Components/India.js","Components/World.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Link","eventKey","Component","Statedata","state","stateData","Axios","get","then","response","setState","data","console","log","keys","Object","this","Accordion","map","itm","ky","districts","districtData","total_confirmed","total_active","total_recoverd","total_deaths","district_list","x","confirmed","active","recovered","deceased","ob","push","Card","as","Button","Body","key","district_name","recoverd","deaths","India","src","height","width","alt","style","Title","cases","Text","todayCases","critical","todayRecovered","todayDeaths","World","country","marginLeft","countryInfo","flag","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7daa5991.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React , {Component} from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"#home\">Covid-19</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Link className='nav-link' to =\"/india\">India</Link>\r\n      <Link className='nav-link' to =\"/world\">World</Link>\r\n      \r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n      <Nav.Link eventKey={2} href=\"#memes\">\r\n        Dank memes\r\n      </Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React , {Component} from 'react';\r\nimport { Card , Accordion , Button } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass Statedata extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            stateData : {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\r\n            this.setState({stateData:response.data});\r\n            console.log(response.data);\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        let keys = Object.keys(this.state.stateData)\r\n    \r\n        return(\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                <Accordion>\r\n                    {\r\n                        keys.map((itm,ky)=>{\r\n                            let districts = this.state.stateData[itm].districtData;\r\n                            let district_keys = Object.keys(districts);\r\n\r\n                            let total_confirmed = 0;\r\n                            let total_active = 0;\r\n                            let total_recoverd = 0;\r\n                            let total_deaths = 0;\r\n\r\n                            let district_list = [];\r\n                            for(let x in districts){\r\n                                total_confirmed += districts[x].confirmed;\r\n                                total_active += districts[x].active;\r\n                                total_recoverd += districts[x].recovered;\r\n                                total_deaths += districts[x].deceased;\r\n                                let ob = districts[x];\r\n                                ob ['district_name'] = x;\r\n                                district_list.push(ob);\r\n                            }\r\n//                            console.log(district_list);\r\n\r\n                            return(\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"primary\" eventKey={ky}>\r\n                                        {itm} <span className = 'btn-dark p-1 mr-2'> Total cases - {total_confirmed} </span> Active - {total_active}  Recoverd - {total_recoverd} Deaths - {total_deaths}\r\n                                    </Accordion.Toggle>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={ky}>\r\n                                    <Card.Body>\r\n                                        <table className='table table-bodered table-striped'>\r\n                                            <thead>\r\n                                                <td>District</td>\r\n                                                <td>Confirmed</td>\r\n                                                <td>Active</td>\r\n                                                <td>Recovered</td>\r\n                                                <td>Deaths</td>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    district_list.map((itm,key)=>{\r\n                                                        return(\r\n                                                            <tr>\r\n                                                                <td>{itm.district_name}</td>\r\n                                                                <td>{itm.confirmed}</td>\r\n                                                                <td>{itm.active}</td>\r\n                                                                <td>{itm.recoverd}</td>\r\n                                                                <td>{itm.deaths}</td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </Accordion>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Statedata;","import React , {Component} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport Statedata from './Statedata';\r\nimport Axios from 'axios';\r\n\r\nclass India extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data : {}\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then(response=>{\r\n            this.setState({data:response.data})\r\n\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                    <img src=\"https://cdn.britannica.com/97/1597-004-05816F4E/Flag-India.jpg\" height=\"70px\" width= \"100px\" alt=\"...\"></img>\r\n                    <h3>India</h3>\r\n                </div>\r\n                <div className='col-md-12'>\r\n                    <div className='row'>\r\n                        <div className='col-md-3'>\r\n                        <Card className='badge badge-primary' style={{ width: '18rem' }}>\r\n                            <Card.Body className='text-center'>\r\n                            <Card.Title>Total Cases</Card.Title>\r\n                            <h3>{this.state.data.cases}</h3>\r\n                            <Card.Text>\r\n                            [Today : {this.state.data.todayCases}]\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </div>\r\n                        <div className='col-md-3'>\r\n                        <Card className='badge badge-warning' style={{ width: '18rem' }}>\r\n                            <Card.Body className='text-center'>\r\n                            <Card.Title>Active Cases</Card.Title>\r\n                            <h3>{this.state.data.active}</h3>\r\n                            <Card.Text>\r\n                            [Critical : {this.state.data.critical}]\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </div>\r\n                        <div className='col-md-3'>\r\n                        <Card className='badge badge-success' style={{ width: '18rem' }}>\r\n                            <Card.Body className='text-center'>\r\n                            <Card.Title>Recoverd</Card.Title>\r\n                            <h3>{this.state.data.recovered}</h3>\r\n                            <Card.Text>\r\n                            [Today : {this.state.data.todayRecovered}]\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </div>\r\n                        <div className='col-md-3'>\r\n                        <Card className='badge badge-danger' style={{ width: '18rem' }}>\r\n                            <Card.Body className='text-center'>\r\n                            <Card.Title>Deaths</Card.Title>\r\n                            <h3>{this.state.data.deaths}</h3>\r\n                            <Card.Text>\r\n                            [Today : {this.state.data.todayDeaths}]\r\n                            </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </div>\r\n                        <div className='col-md-12'>\r\n                            <Statedata/>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default India;","import React , {Component} from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass World extends Component{\r\n\r\n    constructor(){\r\n        super ();\r\n        this.state = {\r\n            data : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\r\n            this.setState({data:response.data});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='row'>\r\n                <div className = 'col-md-12'> \r\n                    <table className='table table-primary table-bodered table-striped'>\r\n                        <thead>\r\n                            <td>Country</td>\r\n                            <td>Total cases</td>\r\n                            <td>Recoverd</td>\r\n                            <td>Deaths</td>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.data.map((itm,ky)=>{\r\n                                    return(\r\n                                        <tr>\r\n                                            <td>{itm.country}\r\n                                                <img style = {{width:\"64px\" , marginLeft:\"10px\"}}src={itm.countryInfo.flag}/>\r\n                                            </td>\r\n                                            <td>{itm.cases}</td>\r\n                                            <td>{itm.recoverd}</td>\r\n                                            <td>{itm.deaths}</td>\r\n                                        </tr>\r\n                                    ) \r\n                                })\r\n                            }    \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default World;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button} from 'react-bootstrap';\nimport Header from './Components/Header';\nimport India from './Components/India';\nimport World from './Components/World';\nimport Statedata from './Components/Statedata';\n\nimport { \n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Router>\n        <Header/>\n        <Switch>\n\n          <Route exact path=\"/\">\n            <India/>\n          </Route>\n\n          <Route path=\"/india\">\n            <India/>\n          </Route>\n\n          <Route path=\"/world\">\n            <World/>\n          </Route>\n\n          <Route path=\"/statedata\">\n            <Statedata/>\n          </Route>\n\n        </Switch>\n\n\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}